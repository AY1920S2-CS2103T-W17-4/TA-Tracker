@startuml

box Logic
participant ":LogicManager" as LogicManager
participant ":TaTrackerParser" as TaTrackerParser
participant ":SessionCommandParser" as SessionCommandParser
participant ":DoneSessionCommandParser" as DoneSessionCommandParser
participant "a:DoneSessionCommand" as DoneSessionCommand
participant ":CommandResult" as CommandResult
end box

box Model
participant "m:Student" as Student
participant ":Model" as Model
end box

[-> LogicManager : execute("session done 1")
activate LogicManager

LogicManager -> TaTrackerParser : parseCommand("session done 1")
activate TaTrackerParser
create SessionCommandParser
TaTrackerParser -> SessionCommandParser : SessionCommandParser()
activate SessionCommandParser
SessionCommandParser --> TaTrackerParser
deactivate SessionCommandParser

TaTrackerParser -> SessionCommandParser : parseCommand("session done 1")
activate SessionCommandParser

create DoneSessionCommandParser
SessionCommandParser -> DoneSessionCommandParser : DoneSessionCommandParser()
activate DoneSessionCommandParser
DoneSessionCommandParser --> SessionCommandParser
deactivate DoneSessionCommandParser

SessionCommandParser -> DoneSessionCommandParser : parseCommand("session done 1")
activate DoneSessionCommandParser

create DoneSessionCommand
DoneSessionCommandParser -> DoneSessionCommand : DoneSessionCommand(1);
activate DoneSessionCommand
DoneSessionCommand --> DoneSessionCommandParser
deactivate DoneSessionCommand

DoneSessionCommandParser --> SessionCommandParser : a
deactivate DoneSessionCommandParser
DoneSessionCommandParser -[hidden]-> SessionCommandParser
destroy DoneSessionCommandParser

SessionCommandParser --> TaTrackerParser : a
deactivate SessionCommandParser
SessionCommandParser -[hidden]-> TaTrackerParser
destroy SessionCommandParser

TaTrackerParser --> LogicManager : a
deactivate TaTrackerParser

LogicManager -> DoneSessionCommand : execute()
activate DoneSessionCommand

alt recurring() != 0
    DoneSessionCommand -> Model : addSession(session)
    activate Model
    Model --> AddSessionCommand
    deactivate Model

DoneSessionCommand -> Model : DoneSession(current)
activate Model
Model --> DoneSessionCommand
deactivate Model

create CommandResult
DoneSessionCommand -> CommandResult : CommandResult(SuccessMessage)
activate CommandResult
CommandResult --> DoneSessionCommand
deactivate CommandResult

DoneSessionCommand --> LogicManager : result
deactivate DoneSessionCommand

[<--LogicManager
deactivate LogicManager
@enduml
